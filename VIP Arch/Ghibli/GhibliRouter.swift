//
//  GhibliRouter.swift
//  VIP Arch
//
//  Created by Ferry Adi Wijayanto on 16/08/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol GhibliRouting {
    
    func routeTo(_ route: GhibliModel.Route)
}

final class GhibliRouter {
    
    private weak var viewController: UIViewController?
    
    init(viewController: UIViewController?) {
        self.viewController = viewController
    }
}


// MARK: - GhibliRouting
extension GhibliRouter: GhibliRouting {
    
    func routeTo(_ route: GhibliModel.Route) {
        DispatchQueue.main.async {
            switch route {
            case let .gotoDetailScreen(withMovie: movie):
                self.pushToDetail(movie)
            }
        }
    }
}


// MARK: - Private Zone
private extension GhibliRouter {
    
    func dismissGhibliScene() {
        viewController?.dismiss(animated: true)
    }
    
    func showXSceneBy(_ data: Int) {
        print("will show the next screen")
    }
    
    func pushToDetail(_ movie: GhibliResponse) {
        let detailViewController = DetailViewController(movie: movie)
        viewController?.navigationController?.pushViewController(detailViewController, animated: true)
    }
}
