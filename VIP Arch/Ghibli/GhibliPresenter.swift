//
//  GhibliPresenter.swift
//  VIP Arch
//
//  Created by Ferry Adi Wijayanto on 16/08/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import Foundation

protocol GhibliPresentationLogic {
    func presentResponse(_ response: GhibliModel.Response)
}

final class GhibliPresenter {
    private weak var viewController: GhibliDisplayLogic?
    
    init(viewController: GhibliDisplayLogic?) {
        self.viewController = viewController
    }
}


// MARK: - GhibliPresentationLogic
extension GhibliPresenter: GhibliPresentationLogic {
    
    func presentResponse(_ response: GhibliModel.Response) {
        
        switch response {
        case .movies(let movies):
            showMovies(movies)
        case .error(let error):
            showError(error)
        }
    }
}


// MARK: - Private Zone
private extension GhibliPresenter {
    
    func showMovies(_ movies: [GhibliResponse]) {
        viewController?.displayViewModel(.movies(movies))
    }
    
    func showError(_ error: String) {
        viewController?.displayViewModel(.error(error))
    }
}
